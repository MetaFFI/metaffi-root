---
description: get information about metaffi installers
alwaysApply: false
---
# MetaFFI Installer System

Core installer system for MetaFFI and its plugins, providing cross-platform installation capabilities.

## Key Components

### Core Installer Files
- `build_installer.py`: Main script for building MetaFFI core installer
  - Creates Windows and Linux installers
  - Handles file packaging and compression
  - Generates uninstallers for both platforms

- `build_plugin_installer.py`: Script for building plugin installers
  - Creates platform-specific plugin installers
  - Handles plugin prerequisites and environment setup
  - Manages plugin file packaging and installation

### Template Files
- `metaffi_installer_template.py`: Base template for core installer
- `metaffi_plugin_installer_template.py`: Base template for plugin installers
- `uninstall_template.py`: Template for uninstaller scripts
- `post_install_tests_template.py`: Template for post-installation tests

## Plugin Development Requirements

### Required Files in Plugin Directory
1. `build_plugin_installer_helper.py`:
   - `check_prerequisites() -> bool`: Validates installation requirements
   - `print_prerequisites()`: Displays required prerequisites
   - `setup_environment()`: Configures plugin environment
   - `get_files(win_metaffi_home, ubuntu_metaffi_home) -> Tuple[Dict[str, str], Dict[str, str]]`: Lists files to install
   - `get_version()`: Returns plugin version

2. `uninstall_plugin.py`:
   - Handles plugin uninstallation
   - Executes cleanup operations
   - Called by MetaFFI uninstaller

## Installation Process
1. Core Installation:
   - Validates system requirements
   - Installs core MetaFFI components
   - Sets up environment variables
   - Creates uninstaller

2. Plugin Installation:
   - Checks plugin prerequisites
   - Installs plugin files
   - Sets up plugin environment
   - Runs post-installation tests

## Development Guidelines
- Use provided templates for new installers
- Follow platform-specific conventions
- Handle dependencies appropriately
- Implement proper cleanup in uninstallers
- Use UTF-8 encoding for all Python files
- Follow the standardized directory structure

## Platform Support
- Windows: Full support with MSVC runtime
- Linux: Full support with GCC/Clang
- Ubuntu: Specific optimizations
- macOS: Limited support

# Auto-attach for:
# - /c:/src/github.com/MetaFFI/metaffi-installer/*

